name: Kubernetes Deployment

on:
  workflow_dispatch:
    inputs:
      k8s_action:
        description: 'Kubernetes Action'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - update
          - delete
          - status
      project_id:
        description: 'GCP Project ID'
        required: true
        default: 'turnkey-guild-441104-f3'
      cluster_name:
        description: 'GKE Cluster Name'
        required: true
        default: 'my-gke-cluster'
      region:
        description: 'GCP Region'
        required: true
        default: 'us-central1'
      zone:
        description: 'GCP Zone'
        required: true
        default: 'us-central1-a'
      namespace:
        description: 'Kubernetes Namespace'
        required: true
        default: 'default'

env:
  PROJECT_ID: ${{ github.event.inputs.project_id }}
  CLUSTER_NAME: ${{ github.event.inputs.cluster_name }}
  REGION: ${{ github.event.inputs.region }}
  ZONE: ${{ github.event.inputs.zone }}
  NAMESPACE: ${{ github.event.inputs.namespace }}

jobs:
  kubernetes-operations:
    name: 'Kubernetes ${{ github.event.inputs.k8s_action }}'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Connect to GKE Cluster
      run: |
        echo "🔗 Connecting to GKE cluster..."
        gcloud container clusters get-credentials ${{ github.event.inputs.cluster_name }}           --region ${{ github.event.inputs.region }}           --project ${{ github.event.inputs.project_id }}
        
        echo "✅ Connected to cluster: ${{ github.event.inputs.cluster_name }}"
        kubectl cluster-info
        kubectl get nodes

    # STATUS OPERATION
    - name: Check Deployment Status
      if: github.event.inputs.k8s_action == 'status'
      run: |
        echo "📊 Checking deployment status..."
        echo "🔍 Namespace status:"
        kubectl get namespace ${{ github.event.inputs.namespace }} || echo "Namespace does not exist"
        echo ""
        echo "🚀 Deployment status:"
        kubectl get deployments -n ${{ github.event.inputs.namespace }} || echo "No deployments found"
        echo ""
        echo "🌐 Service status:"
        kubectl get services -n ${{ github.event.inputs.namespace }} || echo "No services found"
        echo ""
        echo "📦 Pod status:"
        kubectl get pods -n ${{ github.event.inputs.namespace }} || echo "No pods found"

    # DEPLOY OPERATION
    - name: Deploy Applications
      if: github.event.inputs.k8s_action == 'deploy'
      run: |
        echo "🚀 Deploying selected manifests: db-init-job"
        echo "📁 Creating namespace..."
        kubectl apply -f k8s/namespace.yaml
        
        # Apply all manifest files
        for file in k8s/*.yaml; do
          if [ "$file" != "k8s/namespace.yaml" ]; then
            echo "📦 Applying $file..."
            kubectl apply -f "$file"
          fi
        done
        
        echo "⏳ Waiting for deployments to be ready..."
        kubectl wait --for=condition=available --timeout=300s deployment --all -n ${{ github.event.inputs.namespace }} || true
        
        echo "✅ Applications deployed successfully!"
        echo ""
        echo "📊 DEPLOYMENT SUMMARY:"
        kubectl get all -n ${{ github.event.inputs.namespace }}

    # UPDATE OPERATION
    - name: Update Applications
      if: github.event.inputs.k8s_action == 'update'
      run: |
        echo "🔄 Updating applications..."
        
        # Apply all manifest files
        for file in k8s/*.yaml; do
          echo "🔧 Updating $file..."
          kubectl apply -f "$file"
        done
        
        # Restart deployments for rolling update
        kubectl rollout restart deployment --all -n ${{ github.event.inputs.namespace }} || true
        
        echo "⏳ Waiting for rolling update to complete..."
        kubectl rollout status deployment --all -n ${{ github.event.inputs.namespace }} || true
        
        echo "✅ Applications updated successfully!"

    # DELETE OPERATION
    - name: Delete Applications
      if: github.event.inputs.k8s_action == 'delete'
      run: |
        echo "🗑️ Deleting applications..."
        
        # Delete all resources except namespace
        for file in k8s/*.yaml; do
          if [ "$file" != "k8s/namespace.yaml" ]; then
            echo "🗑️ Deleting $file..."
            kubectl delete -f "$file" --ignore-not-found=true
          fi
        done
        
        echo "⏳ Waiting for resources to be deleted..."
        kubectl wait --for=delete pod --all -n ${{ github.event.inputs.namespace }} --timeout=120s || true
        
        echo "✅ Applications deleted successfully!"

    # FINAL SUMMARY
    - name: Operation Summary
      if: always()
      run: |
        echo ""
        echo "📊 KUBERNETES OPERATION SUMMARY"
        echo "================================"
        echo "🎯 Action: ${{ github.event.inputs.k8s_action }}"
        echo "📍 Project: ${{ github.event.inputs.project_id }}"
        echo "🏷️ Cluster: ${{ github.event.inputs.cluster_name }}"
        echo "🌍 Region: ${{ github.event.inputs.region }}"
        echo "📦 Namespace: ${{ github.event.inputs.namespace }}"
        echo "🚀 Manifests: db-init-job"
        echo ""
        echo "🔗 Workflow URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"